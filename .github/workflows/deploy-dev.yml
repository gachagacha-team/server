name: Build and Deploy

on:
  push:
    branches: [ "dev" ]

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set up jdk 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: set yml for common.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./common/src/main/resources/common.yml
        env:
          logging.discord.webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL_GACHA_DEV }}

      - name: set yml for gacha-api
        uses: microsoft/variable-substitution@v1
        with:
          files: ./gacha-api/src/main/resources/application-dev.yml
        env:
#          server.ssl.key-store: ${{ secrets.SSL_KEY_STORE }}
#          server.ssl.key-store-type: ${{ secrets.SSL_KEY_STORE_TYPE }}
#          server.ssl.key-store-password: ${{ secrets.SSL_KEY_STORE_PASSWORD }}
#          jwt.secret: ${{ secrets.JWT_SECRET }}
#          oauth.github.client_id: ${{ secrets.OAUTH_GITHUB_CLIENT_ID_DEV }}
#          oauth.github.client_secret: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET_DEV }}
#          oauth.kakao.client_id: ${{ secrets.KAKAO_CLIENT_ID_DEV }}
#          oauth.kakao.redirect_url: ${{ secrets.KAKAO_REDIRECT_URL_DEV }}
#          oauth.kakao.admin_key: ${{ secrets.KAKAO_ADMIN_KEY_DEV }}
#          logging.discord.webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL_GACHA_DEV }}

      - name: set yml for lotto-api server
        uses: microsoft/variable-substitution@v1
        with:
          files: ./lotto-api/src/main/resources/application.yml
        env:
          logging.discord.webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL_LOTTO_DEV }}
          spring.datasource.url: ${{ secrets.DATASOURCE_URL_DEV }}
          spring.datasource.username: ${{ secrets.DATASOURCE_USERNAME_DEV }}
          spring.datasource.password: ${{ secrets.DATASOURCE_PASSWORD_DEV }}

      - name: build gacha-api
        run: ./gradlew :gacha-api:bootJar

      - name: build lotto-api
        run: ./gradlew :lotto-api:bootJar

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: docker build for gacha-api
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gacha-api ./gacha-api
          docker push ${{ secrets.DOCKER_USERNAME }}/gacha-api

      - name: docker build for lotto-api
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/lotto-api ./lotto-api
          docker push ${{ secrets.DOCKER_USERNAME }}/lotto-api

      - name: deploy gacha-api to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/gacha-api
            existing_container=$(docker ps -a -q -f name=gacha-api)
            if [ -n "$existing_container" ]; then
              sudo docker rm -f $existing_container
              sleep 3 
            fi
              sudo docker run -d --name gacha-api --network host -p 8080:8080 \
              -e SPRING_PROFILES_ACTIVE=dev \
              -v /var/log/gacha-api:/log \
              ${{ secrets.DOCKER_USERNAME }}/gacha-api:latest

      - name: deploy lotto-api to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/lotto-api
            existing_container=$(docker ps -a -q -f name=lotto-api)
            if [ -n "$existing_container" ]; then
              sudo docker rm -f $existing_container
              sleep 3 
            fi
              sudo docker run -d --name lotto-api --network host -p 8081:8081 \
              -e SPRING_PROFILES_ACTIVE=dev \
              -v /var/log/lotto-api:/log \
              ${{ secrets.DOCKER_USERNAME }}/lotto-api:latest
